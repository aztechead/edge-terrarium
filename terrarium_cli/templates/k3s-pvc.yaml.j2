# =============================================================================
# AUTO-GENERATED FILE - DO NOT EDIT MANUALLY
# =============================================================================
# This file is automatically generated by the Terrarium CLI from templates.
# Any manual changes will be overwritten on the next deployment.
# 
# To modify the configuration, edit the app-config.yml files in the apps/ directory
# or update the templates in terrarium_cli/templates/
# =============================================================================

# =============================================================================
# KUBERNETES PERSISTENT VOLUME CLAIMS TEMPLATE
# =============================================================================
# This template generates Kubernetes PersistentVolumeClaim manifests for applications.
# It creates PVCs for persistent storage based on app volume configurations.
#
# Template Variables:
#   {{ apps }} - List of application configurations from app-config.yml files
#   {{ global_config.namespace }} - Kubernetes namespace for the PVCs
#   {{ global_config.project_name }} - Project name for labeling
#
# Generated Resources:
#   - PersistentVolumeClaim: Requests persistent storage from the cluster
#   - Storage Classes: Uses default storage class for dynamic provisioning
#   - Access Modes: Defines how volumes can be accessed (ReadWriteOnce, ReadWriteMany, etc.)
#   - Storage Size: Specifies the amount of storage requested
# =============================================================================

{% for app in apps %}
{% if app.volumes %}
{% for volume in app.volumes %}
# =============================================================================
# PERSISTENT VOLUME CLAIM: {{ volume.name.upper() }}
# =============================================================================
# PVC for {{ app.name }} - {{ volume.name }}
# Mount path: {{ volume.mount_path }}
# Size: {{ volume.size }}
# Access mode: {{ volume.access_mode }}
# =============================================================================
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ volume.name }}-pvc                        # PVC name (must be unique in namespace)
  namespace: {{ global_config.namespace }}           # Kubernetes namespace
  labels:
    app: {{ app.name }}                              # App label for organization
    project: {{ global_config.project_name }}        # Project label for organization
    volume: {{ volume.name }}                        # Volume label for identification

# =============================================================================
# PVC SPECIFICATION
# =============================================================================
# Defines the storage requirements for the PVC
spec:
  # =============================================================================
  # ACCESS MODES
  # =============================================================================
  # Define how the volume can be accessed
  # ReadWriteOnce: Can be mounted as read-write by a single node
  # ReadWriteMany: Can be mounted as read-write by many nodes
  # ReadOnlyMany: Can be mounted as read-only by many nodes
  accessModes:
    - {{ volume.access_mode }}                       # Access mode from app config

  # =============================================================================
  # STORAGE RESOURCES
  # =============================================================================
  # Define the storage requirements
  resources:
    requests:
      storage: {{ volume.size }}                     # Storage size requested

  # =============================================================================
  # STORAGE CLASS
  # =============================================================================
  # Uses default storage class for dynamic provisioning
  # The cluster will automatically provision a PersistentVolume
  # storageClassName: default                        # Uncomment to specify storage class
{% endfor %}
{% endif %}
{% endfor %}
