# =============================================================================
# AUTO-GENERATED FILE - DO NOT EDIT MANUALLY
# =============================================================================
# This file is automatically generated by the Terrarium CLI from templates.
# Any manual changes will be overwritten on the next deployment.
# 
# To modify the configuration, edit the app-config.yml files in the apps/ directory
# or update the templates in terrarium_cli/templates/
# =============================================================================

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ global_config.project_name }}-ingress
  namespace: {{ global_config.namespace }}
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/ssl-protocols: "TLSv1.2 TLSv1.3"
    nginx.ingress.kubernetes.io/ssl-ciphers: "HIGH:!aNULL:!MD5"
    nginx.ingress.kubernetes.io/ssl-prefer-server-ciphers: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"
    nginx.ingress.kubernetes.io/cors-expose-headers: "Content-Length,Content-Range"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$1
spec:
  tls:
  - hosts:
    - {{ global_config.host_name }}
    secretName: {{ global_config.tls_secret_name }}
  rules:
  - host: {{ global_config.host_name }}
    http:
      paths:
      {% set all_routes = [] %}
      {% for app in apps %}
      {% for route in app.routes %}
      {% set specificity = route.path.count('*') + route.path.count('/') %}
      {% set _ = all_routes.append({'path': route.path, 'app': app.name, 'port': app.runtime.port, 'specificity': specificity, 'is_catch_all': false}) %}
      {% endfor %}
      {% endfor %}
             {% for route in all_routes | sort(attribute='is_catch_all') | sort(attribute='specificity', reverse=true) %}
             - path: /api{{ route.path | replace('*', '(.*)') }}
               pathType: ImplementationSpecific
               backend:
                 service:
                   name: {{ route.app }}
                   port:
                     number: {{ route.port }}
             {% endfor %}
             # Catch-all for unmatched /api/* requests
             - path: /api/(.*)
               pathType: ImplementationSpecific
               backend:
                 service:
                   name: service-sink
                   port:
                     number: 8080
             # Root path fallback (catch-all)
             - path: /
               pathType: ImplementationSpecific
               backend:
                 service:
                   name: service-sink
                   port:
                     number: 8080
