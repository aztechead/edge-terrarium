apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: edge-terrarium-ingress
  namespace: edge-terrarium
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/ssl-protocols: "TLSv1.2 TLSv1.3"
    nginx.ingress.kubernetes.io/ssl-ciphers: "HIGH:!aNULL:!MD5"
    nginx.ingress.kubernetes.io/ssl-prefer-server-ciphers: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"
    nginx.ingress.kubernetes.io/cors-expose-headers: "Content-Length,Content-Range"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$1
spec:
  tls:
  - hosts:
    - edge-terrarium.local
    secretName: edge-terrarium-tls
  rules:
  - host: edge-terrarium.local
    http:
      paths:
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
             
             - path: /api/file-storage/(.*)
               pathType: ImplementationSpecific
               backend:
                 service:
                   name: file-storage
                   port:
                     number: 9000
             
             - path: /api/storage/(.*)
               pathType: ImplementationSpecific
               backend:
                 service:
                   name: file-storage
                   port:
                     number: 9000
             
             - path: /api/custom-client/(.*)
               pathType: ImplementationSpecific
               backend:
                 service:
                   name: custom-client
                   port:
                     number: 1337
             
             - path: /api/fake-provider/(.*)
               pathType: ImplementationSpecific
               backend:
                 service:
                   name: custom-client
                   port:
                     number: 1337
             
             - path: /api/example-provider/(.*)
               pathType: ImplementationSpecific
               backend:
                 service:
                   name: custom-client
                   port:
                     number: 1337
             
             - path: /api/logthon/(.*)
               pathType: ImplementationSpecific
               backend:
                 service:
                   name: logthon
                   port:
                     number: 5000
             
             - path: /api/logs/(.*)
               pathType: ImplementationSpecific
               backend:
                 service:
                   name: logthon
                   port:
                     number: 5000
             
             - path: /api/vault/(.*)
               pathType: ImplementationSpecific
               backend:
                 service:
                   name: vault
                   port:
                     number: 8200
             
             # Catch-all for unmatched /api/* requests
             - path: /api/(.*)
               pathType: ImplementationSpecific
               backend:
                 service:
                   name: service-sink
                   port:
                     number: 8080
             # Root path fallback (catch-all)
             - path: /
               pathType: ImplementationSpecific
               backend:
                 service:
                   name: service-sink
                   port:
                     number: 8080