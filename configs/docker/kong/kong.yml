# =============================================================================
# KONG GATEWAY DECLARATIVE CONFIGURATION
# =============================================================================
# This file defines the Kong Gateway configuration for Docker Compose.
# Kong Gateway acts as an API gateway, providing routing, load balancing,
# and various plugins for the Edge Terrarium application.
#
# Key Concepts:
# - Services: Backend services that Kong routes traffic to
# - Routes: URL patterns that determine which service receives traffic
# - Plugins: Extensions that add functionality (CORS, rate limiting, etc.)
# - Strip Path: Whether to remove the matched path when forwarding to backend
# - Preserve Host: Whether to keep the original host header
# - Protocols: HTTP and HTTPS support
#
# Impact:
# - Routes CDP client requests to appropriate endpoints
# - Routes logthon requests to log aggregation service
# - Routes all other requests to service-sink (default)
# - Provides CORS support for web applications
# - Implements rate limiting to prevent abuse
# - Limits request size to prevent large payload attacks
# - Enables both HTTP and HTTPS protocols
#
# Documentation: https://docs.konghq.com/gateway/latest/configuration/
# =============================================================================

_format_version: "3.0"            # Kong declarative configuration format version

services:                         # List of backend services
  # CDP Client Service
  # Routes traffic to the CDP client application for specific endpoints
  - name: cdp-client-service      # Name of the service
    url: http://cdp-client:1337   # Backend URL (Docker Compose service name)
    routes:                       # List of routes for this service
      - name: cdp-client-fake-provider  # Route name
        paths:                    # URL paths that match this route
          - /fake-provider        # Path pattern to match
        strip_path: false         # Don't remove the path when forwarding
        preserve_host: true       # Keep the original host header
        protocols:                # Supported protocols
          - http                  # HTTP protocol
          - https                 # HTTPS protocol
      - name: cdp-client-example-provider  # Route name
        paths:                    # URL paths that match this route
          - /example-provider     # Path pattern to match
        strip_path: false         # Don't remove the path when forwarding
        preserve_host: true       # Keep the original host header
        protocols:                # Supported protocols
          - http                  # HTTP protocol
          - https                 # HTTPS protocol

  # Service Sink Service (default route)
  # Routes traffic to the service-sink application for all other requests
  - name: service-sink-service    # Name of the service
    url: http://service-sink:8080 # Backend URL (Docker Compose service name)
    routes:                       # List of routes for this service
      - name: service-sink-health # Route name for health endpoint
        paths:                    # URL paths that match this route
          - /health               # Health check endpoint
        strip_path: false         # Don't remove the path when forwarding
        preserve_host: true       # Keep the original host header
        protocols:                # Supported protocols
          - http                  # HTTP protocol
          - https                 # HTTPS protocol
      - name: service-sink-default # Route name
        paths:                    # URL paths that match this route
          - /                     # Root path (catches all unmatched requests)
        strip_path: false         # Don't remove the path when forwarding
        preserve_host: true       # Keep the original host header
        protocols:                # Supported protocols
          - http                  # HTTP protocol
          - https                 # HTTPS protocol

  # Logthon Service
  # Routes traffic to the logthon log aggregation service
  - name: logthon-service         # Name of the service
    url: http://logthon:5000/     # Backend URL (Docker Compose service name)
    routes:                       # List of routes for this service
      - name: logthon-health      # Route name for health endpoint
        paths:                    # URL paths that match this route
          - /logs/health          # Health check endpoint
        strip_path: true          # Remove the /logs path when forwarding
        preserve_host: true       # Keep the original host header
        protocols:                # Supported protocols
          - http                  # HTTP protocol
          - https                 # HTTPS protocol
      - name: logthon-logs        # Route name
        paths:                    # URL paths that match this route
          - /logs                 # Path pattern to match
        strip_path: true          # Remove the /logs path when forwarding
        preserve_host: true       # Keep the original host header
        protocols:                # Supported protocols
          - http                  # HTTP protocol
          - https                 # HTTPS protocol

  # Vault Service
  # Routes traffic to the Vault secret management service
  - name: vault-service           # Name of the service
    url: http://vault:8200        # Backend URL (Docker Compose service name)
    routes:                       # List of routes for this service
      - name: vault-health        # Route name for health endpoint
        paths:                    # URL paths that match this route
          - /vault/v1/sys/health  # Health check endpoint
        strip_path: false         # Don't remove the path when forwarding
        preserve_host: true       # Keep the original host header
        protocols:                # Supported protocols
          - http                  # HTTP protocol
          - https                 # HTTPS protocol

# Global plugins
# These plugins apply to all services and routes
plugins:
  # CORS (Cross-Origin Resource Sharing) plugin
  # Allows web applications to make requests from different origins
  - name: cors                    # Plugin name
    config:                       # Plugin configuration
      origins:                    # Allowed origins
        - "*"                     # Allow all origins (development only)
      methods:                    # Allowed HTTP methods
        - GET                     # GET requests
        - POST                    # POST requests
        - PUT                     # PUT requests
        - DELETE                  # DELETE requests
        - OPTIONS                 # OPTIONS requests (for CORS preflight)
      headers:                    # Allowed headers
        - Accept                  # Accept header
        - Accept-Version          # Accept-Version header
        - Content-Length          # Content-Length header
        - Content-MD5             # Content-MD5 header
        - Content-Type            # Content-Type header
        - Date                    # Date header
        - X-Auth-Token            # X-Auth-Token header
        - Authorization           # Authorization header
      exposed_headers:            # Headers exposed to the client
        - X-Auth-Token            # X-Auth-Token header
      credentials: true           # Allow credentials in CORS requests
      max_age: 3600               # Cache preflight response for 1 hour
      preflight_continue: false   # Don't continue to backend for preflight requests

  # Rate limiting plugin
  # Prevents abuse by limiting the number of requests per time period
  - name: rate-limiting           # Plugin name
    config:                       # Plugin configuration
      minute: 1000                # Allow 1000 requests per minute
      hour: 10000                 # Allow 10000 requests per hour
      policy: local               # Use local storage for rate limiting

  # Request size limiting plugin
  # Prevents large payload attacks by limiting request size
  - name: request-size-limiting   # Plugin name
    config:                       # Plugin configuration
      allowed_payload_size: 10    # Allow requests up to 10MB
